# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-03-16 17:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('crm', '0005_auto_20190309_1755'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('content', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_num', models.PositiveSmallIntegerField(verbose_name='课程节次')),
                ('title', models.CharField(max_length=64, verbose_name='本节主题')),
                ('content', models.TextField(verbose_name='本节内容')),
                ('has_homework', models.BooleanField(default=True, verbose_name='本节有作业')),
                ('homework', models.TextField(blank=True, null=True, verbose_name='作业需求')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.SmallIntegerField(choices=[(0, '报名费'), (1, '学费'), (2, '退费')], default=0)),
                ('amount', models.IntegerField(default=500, verbose_name='费用')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_agreed', models.BooleanField(default=False)),
                ('contract_signed_date', models.DateTimeField(blank=True, null=True)),
                ('contract_approved', models.BooleanField(default=False)),
                ('contract_approved_date', models.DateTimeField(blank=True, null=True, verbose_name='合同审核时间')),
            ],
        ),
        migrations.RenameModel(
            old_name='StudyRecode',
            new_name='StudyRecord',
        ),
        migrations.AlterUniqueTogether(
            name='courserrecord',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='courserrecord',
            name='class_grade',
        ),
        migrations.RemoveField(
            model_name='courserrecord',
            name='teacher',
        ),
        migrations.AlterModelOptions(
            name='customerinfo',
            options={'verbose_name': '客户信息', 'verbose_name_plural': '客户信息'},
        ),
        migrations.RenameField(
            model_name='customerinfo',
            old_name='data',
            new_name='date',
        ),
        migrations.RenameField(
            model_name='role',
            old_name='menu',
            new_name='menus',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='class_grad',
            new_name='class_grades',
        ),
        migrations.RemoveField(
            model_name='customerinfo',
            name='referral_form',
        ),
        migrations.AddField(
            model_name='classlist',
            name='teachers',
            field=models.ManyToManyField(to='crm.UserProfile', verbose_name='讲师'),
        ),
        migrations.AddField(
            model_name='customerinfo',
            name='emergency_contact',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customerinfo',
            name='id_num',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='customerinfo',
            name='referral_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.CustomerInfo', verbose_name='转介绍'),
        ),
        migrations.AddField(
            model_name='customerinfo',
            name='sex',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(0, '男'), (1, '女')], null=True),
        ),
        migrations.AlterField(
            model_name='branch',
            name='addr',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='classlist',
            name='class_type',
            field=models.SmallIntegerField(choices=[(0, '脱产'), (1, '周末'), (2, '网络班')], default=0),
        ),
        migrations.AlterField(
            model_name='customerfollowup',
            name='status',
            field=models.SmallIntegerField(choices=[(0, '近期无报名计划'), (1, '一个月内报名'), (2, '2周内内报名'), (3, '已报名')]),
        ),
        migrations.AlterField(
            model_name='customerinfo',
            name='contact_type',
            field=models.SmallIntegerField(choices=[(0, 'qq'), (1, '微信'), (2, '手机')], default=0),
        ),
        migrations.AlterField(
            model_name='customerinfo',
            name='source',
            field=models.SmallIntegerField(choices=[(0, 'QQ群'), (1, '51CTO'), (2, '百度推广'), (3, '知乎'), (4, '转介绍'), (5, '其它')]),
        ),
        migrations.AlterField(
            model_name='student',
            name='customer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm.CustomerInfo'),
        ),
        migrations.AlterField(
            model_name='studyrecord',
            name='course_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CourseRecord'),
        ),
        migrations.RemoveField(
            model_name='classlist',
            name='teacher',
        ),
        migrations.AddField(
            model_name='classlist',
            name='contract_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.ContractTemplate'),
        ),
        migrations.AlterUniqueTogether(
            name='classlist',
            unique_together=set([('branch', 'class_type', 'course', 'semester')]),
        ),
        migrations.DeleteModel(
            name='CourserRecord',
        ),
        migrations.AddField(
            model_name='studentenrollment',
            name='class_grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.ClassList'),
        ),
        migrations.AddField(
            model_name='studentenrollment',
            name='consultant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='studentenrollment',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CustomerInfo'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.StudentEnrollment'),
        ),
        migrations.AddField(
            model_name='courserecord',
            name='class_grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.ClassList', verbose_name='上课班级'),
        ),
        migrations.AddField(
            model_name='courserecord',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AlterUniqueTogether(
            name='studentenrollment',
            unique_together=set([('customer', 'class_grade')]),
        ),
        migrations.AlterUniqueTogether(
            name='courserecord',
            unique_together=set([('class_grade', 'day_num')]),
        ),
    ]
